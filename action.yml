name: 'WIPAC Dev Py Setup'
description: 'GitHub Action Package for Automating Python-Package Setup'

inputs:
  author:  # id of input
    description: 'The repo author'
    required: true
  author-email:  # id of input
    description: "The repo author's email"
    required: true
  base-keywords:  # id of input
    description: 'A list of keywords to add to metadata'
    required: false
    default: ''
  directory-exclude:  # id of input
    description: 'A list of directories to exclude from release'
    required: false
    default: 'test tests doc docs resource resources'
  license:  # id of input
    description: "The repo's license type"
    required: false
    default: 'MIT'

# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: "composite"
  steps:
    - name: Check Required Input Args
      run: |
        # https://github.com/actions/runner/issues/1070
        [[ "${{ inputs.author }}" ]] || { echo "author input is empty" ; exit 1; }
        [[ "${{ inputs.author-email }}" ]] || { echo "author-email input is empty" ; exit 1; }
      shell: bash

    - name: Git config
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
      shell: bash

    - name: Build setup.cfg + README.md (and commit)
      run: |
        pip3 install -r ${{ github.action_path }}/requirements.txt
        echo $GITHUB_REPOSITORY
        python3 ${{ github.action_path }}/setup_builder.py \
          setup.cfg \
          $GITHUB_REPOSITORY \
          --author "${{ inputs.author }}" \
          --author-email ${{ inputs.author-email }} \
          --base-keywords ${{ inputs.base-keywords }} \
          --directory-exclude ${{ inputs.directory-exclude }} \
          --license ${{ inputs.license }}
        git add setup.cfg
        git commit -m "<bot> update setup.cfg" || true
        git add README.md || true
        git commit -m "<bot> update README.md" || true
      shell: bash

    - name: Build requirements.txt (and commit)
      run: |
        pip3 install pip-tools
        pip-compile --upgrade
        git add .
        git commit -m "<bot> update requirements.txt" || true
      shell: bash

    - name: Push changes
      run: |
        status=`git status 2>&1 | tee`
        ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
        if [ "$ahead" -eq "1" ]; then
          echo "no changes needed"
          exit 0
        fi
        git push
        echo "changes pushed (rest of workflow canceled)"
        exit 1  # prevent dependent job(s) since there's changes to the code
      shell: bash